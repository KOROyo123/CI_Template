name: Build and Extract Artifacts

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - version: ubuntu-20.04-amd64
            platform: linux/amd64
            dockerfile: ci/docker/dockerfile.debian
            docker_img: ubuntu:20.04
          # - os: ubuntu
          #   version: 22.04
          #   platform: linux/arm64
          #   dockerfile: ci/docker/dockerfile.debian
          #   docker_img: ubuntu:22.04
          # - os: openeuler
          #   version: 22.03
          #   platform: linux/amd64
          #   dockerfile: ci/docker/dockerfile.rhel
          #   docker_img: openeuler/openeuler:22.03-lts-sp1
          # - os: openeuler
          #   version: 22.03
          #   platform: linux/arm64
          #   dockerfile: ci/docker/dockerfile.rhel
          #   docker_img: openeuler/openeuler:22.03-lts-sp1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU for multi-platform support
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Build Docker image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --tag build-image-${{ matrix.version }}\
            --build-arg BASE_IMAGE=${{ matrix.docker_img }} \
            -f ${{ matrix.dockerfile }} \
            --load .

      - name: Create and start container
        run: |
          docker run --name build-container-${{ matrix.version }} -d build-image-${{ matrix.version }}

      - name: Run build script inside container
        run: |
          docker exec build-container-${{ matrix.version }} mkdir app
          docker cp . build-container-${{ matrix.version }}:/app  # 将源代码拷贝到容器中
          docker exec build-container-${{ matrix.version }} chmod +x /app/ci/build_in_docker.sh
          docker exec build-container-${{ matrix.version }} /app/ci/build_in_docker.sh
        

      - name: Copy artifacts from container
        run: |
          docker cp $container_id:/app/bin ./output  
          docker rm $container_id  # 删除容器

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-${{ matrix.platform }}
          path: ./output


